# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c3d7bf26-0f7f-4811-b321-5864c2c9f8d8";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-802dd7e7-90b9-49a0-bf73-5fd790343b6a".device = "/dev/disk/by-uuid/802dd7e7-90b9-49a0-bf73-5fd790343b6a";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F1F4-3AE4";
      fsType = "vfat";
    };

  fileSystems."/500" =
    { device = "/dev/disk/by-uuid/4c93a0b1-b006-40fa-bc50-e61809daafce";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."500".device = "/dev/disk/by-uuid/8a86f0a3-47b6-42d5-96c2-392eb630ea40";

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp15s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
